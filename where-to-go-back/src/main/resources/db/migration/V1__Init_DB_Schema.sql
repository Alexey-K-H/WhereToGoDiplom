CREATE TABLE T_CATEGORY
(
    ID   BIGSERIAL    NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE T_PLACE
(
    ID          BIGSERIAL      NOT NULL,
    LATITUDE    NUMERIC(19, 5) NOT NULL,
    LONGITUDE   NUMERIC(19, 5) NOT NULL,
    DESCRIPTION VARCHAR(255),
    NAME        VARCHAR(255)   NOT NULL,
    THUMBNAIL   VARCHAR(255),
    UPLOADED_AT TIMESTAMP      NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE T_PLACE_CATEGORY
(
    PLACE_ID    INT8 NOT NULL,
    CATEGORY_ID INT8 NOT NULL
);

CREATE TABLE T_PLACE_SUBCATEGORY
(
    PLACE_ID       INT8 NOT NULL,
    SUBCATEGORY_ID INT4 NOT NULL
);

CREATE TABLE T_SCORE
(
    PLACE_ID    INT8 NOT NULL,
    USER_ID     INT8 NOT NULL,
    SCORE_VALUE INT4,
    PRIMARY KEY (PLACE_ID, USER_ID)
);

CREATE TABLE T_STAY_POINT
(
    ID          BIGSERIAL NOT NULL,
    LATITUDE    FLOAT8    NOT NULL,
    LONGITUDE   FLOAT8    NOT NULL,
    UPLOADED_AT TIMESTAMP NOT NULL,
    USER_ID     INT8      NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE T_SUBCATEGORY
(
    ID          SERIAL       NOT NULL,
    NAME        VARCHAR(255) NOT NULL,
    CATEGORY_ID INT8         NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE T_USER
(
    ID         BIGSERIAL    NOT NULL,
    CREATED_AT TIMESTAMP,
    EMAIL      VARCHAR(255) NOT NULL,
    PASSWORD   VARCHAR(255) NOT NULL,
    USERNAME   VARCHAR(255),
    PRIMARY KEY (ID)
);

CREATE TABLE T_USER_COEFFICIENT_MAIN
(
    CATEGORY_ID  INT8   NOT NULL,
    USER_ID      INT8   NOT NULL,
    COEFFICIENT  FLOAT8 NOT NULL,
    COUNT_PLACES INT8   NOT NULL,
    PRIMARY KEY (CATEGORY_ID, USER_ID)
);

CREATE TABLE T_USER_COEFFICIENT_SUB
(
    SUBCATEGORY_ID INT4   NOT NULL,
    USER_ID        INT8   NOT NULL,
    COEFFICIENT    FLOAT8 NOT NULL,
    COUNT_PLACES   INT8   NOT NULL,
    PRIMARY KEY (SUBCATEGORY_ID, USER_ID)
);

CREATE TABLE T_USER_FAVOURITES
(
    USER_ID  INT8 NOT NULL,
    PLACE_ID INT8 NOT NULL,
    PRIMARY KEY (USER_ID, PLACE_ID)
);

CREATE TABLE T_USER_VISITED_PLACES
(
    USER_ID  INT8 NOT NULL,
    PLACE_ID INT8 NOT NULL,
    PRIMARY KEY (USER_ID, PLACE_ID)
);

ALTER TABLE IF EXISTS T_USER_COEFFICIENT_MAIN
    ADD CONSTRAINT UK_T_USER_COEFFICIENT_MAIN_CATEGORY_ID UNIQUE (CATEGORY_ID);

ALTER TABLE IF EXISTS T_USER_COEFFICIENT_SUB
    ADD CONSTRAINT UK_T_USER_COEFFICIENT_MAIN_SUBCATEGORY_ID UNIQUE (SUBCATEGORY_ID);

ALTER TABLE IF EXISTS T_PLACE_CATEGORY
    ADD CONSTRAINT FK_T_PLACE_CATEGORY_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES T_CATEGORY;

ALTER TABLE IF EXISTS T_PLACE_CATEGORY
    ADD CONSTRAINT FK_T_PLACE_CATEGORY_PLACE_ID FOREIGN KEY (PLACE_ID) REFERENCES T_PLACE;

ALTER TABLE IF EXISTS T_PLACE_SUBCATEGORY
    ADD CONSTRAINT FK_T_PLACE_SUBCATEGORY_SUBCATEGORY_ID FOREIGN KEY (SUBCATEGORY_ID) REFERENCES T_SUBCATEGORY;

ALTER TABLE IF EXISTS T_PLACE_SUBCATEGORY
    ADD CONSTRAINT FK_T_PLACE_SUBCATEGORY_PLACE_ID FOREIGN KEY (PLACE_ID) REFERENCES T_PLACE;

ALTER TABLE IF EXISTS T_SCORE
    ADD CONSTRAINT FK_T_SCORE_PLACE_ID FOREIGN KEY (PLACE_ID) REFERENCES T_PLACE ON DELETE CASCADE;

ALTER TABLE IF EXISTS T_SCORE
    ADD CONSTRAINT FK_T_SCORE_USER_ID FOREIGN KEY (USER_ID) REFERENCES T_USER ON DELETE CASCADE;

ALTER TABLE IF EXISTS T_STAY_POINT
    ADD CONSTRAINT FK_T_STAY_POINT_USER_ID FOREIGN KEY (USER_ID) REFERENCES T_USER ON DELETE CASCADE;

ALTER TABLE IF EXISTS T_SUBCATEGORY
    ADD CONSTRAINT FK_T_SUBCATEGORY_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES T_CATEGORY ON DELETE CASCADE;

ALTER TABLE IF EXISTS T_USER_COEFFICIENT_MAIN
    ADD CONSTRAINT FK_T_USER_COEFFICIENT_MAIN_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES T_CATEGORY;

ALTER TABLE IF EXISTS T_USER_COEFFICIENT_MAIN
    ADD CONSTRAINT FK_T_USER_COEFFICIENT_MAIN_USER_ID FOREIGN KEY (USER_ID) REFERENCES T_USER ON DELETE CASCADE;

ALTER TABLE IF EXISTS T_USER_COEFFICIENT_SUB
    ADD CONSTRAINT FK_T_USER_COEFFICIENT_SUB_SUBCATEGORY_ID FOREIGN KEY (SUBCATEGORY_ID) REFERENCES T_SUBCATEGORY;

ALTER TABLE IF EXISTS T_USER_COEFFICIENT_SUB
    ADD CONSTRAINT FK_T_USER_COEFFICIENT_SUB_USER_ID FOREIGN KEY (USER_ID) REFERENCES T_USER;

ALTER TABLE IF EXISTS T_USER_FAVOURITES
    ADD CONSTRAINT FK_T_USER_FAVOURITES_PLACE_ID FOREIGN KEY (PLACE_ID) REFERENCES T_PLACE;

ALTER TABLE IF EXISTS T_USER_FAVOURITES
    ADD CONSTRAINT FK_T_USER_FAVOURITES_USER_ID FOREIGN KEY (USER_ID) REFERENCES T_USER;

ALTER TABLE IF EXISTS T_USER_VISITED_PLACES
    ADD CONSTRAINT FK_T_USER_VISITED_PLACES_PLACE_ID FOREIGN KEY (PLACE_ID) REFERENCES T_PLACE;

ALTER TABLE IF EXISTS T_USER_VISITED_PLACES
    ADD CONSTRAINT FK_T_USER_VISITED_PLACES_USER_ID FOREIGN KEY (USER_ID) REFERENCES T_USER;
